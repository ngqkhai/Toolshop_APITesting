{
  "info": {
    "name": "Toolshop  Testing",
    "description": "Collection for testing Toolshop s based on test cases",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "Product Management",
      "item": [
        {
          "name": "PROD-UPD-TC001 - Verify successful product update with all valid fields",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{admin_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n\"name\": \"Updated Power Drill\", \n\"price\": 129.99, \n\"stock\": 95, \n\"category_id\": 1\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/products/{{productId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "",
                "products",
                "{{productId}}"
              ]
            }
          }
        },
        {
          "name": "PROD-UPD-TC002 - Verify error when updating with a negative price",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{admin_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"price\": -10.00}"
            },
            "url": {
              "raw": "{{baseUrl}}/products/{{productId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "",
                "products",
                "{{productId}}"
              ]
            }
          }
        },
        {
          "name": "PROD-UPD-TC003 - Verify error when updating with an invalid stock value (string)",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{admin_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"stock\": \"fifty\"}"
            },
            "url": {
              "raw": "{{baseUrl}}/products/{{productId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "",
                "products",
                "{{productId}}"
              ]
            }
          }
        },
        {
          "name": "PROD-UPD-TC004 - Verify error when updating a product that does not exist",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{admin_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"name\": \"Ghost Product\"}"
            },
            "url": {
              "raw": "{{baseUrl}}/products/99999",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "",
                "products",
                "99999"
              ]
            }
          }
        },
        {
          "name": "PROD-UPD-TC005 - Verify unauthorized error when updating with a regular user token",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{user_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"price\": 150.00}"
            },
            "url": {
              "raw": "{{baseUrl}}/products/{{productId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "",
                "products",
                "{{productId}}"
              ]
            }
          }
        },
        {
          "name": "PROD-UPD-TC006 - Verify unauthorized error when updating without an auth token",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"price\": 150.00}"
            },
            "url": {
              "raw": "{{baseUrl}}/products/{{productId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "",
                "products",
                "{{productId}}"
              ]
            }
          }
        }
      ]
    },
    {
      "name": "User Management",
      "item": [
        {
          "name": "USER-DEL-TC001 - Verify successful user deletion by an admin",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{admin_token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/users/{{userId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "",
                "users",
                "{{userId}}"
              ]
            }
          }
        },
        {
          "name": "USER-DEL-TC002 - Verify error when deleting a user that does not exist",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{admin_token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/users/99999",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "",
                "users",
                "99999"
              ]
            }
          }
        },
        {
          "name": "USER-DEL-TC003 - Verify a user cannot delete their own account",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{user_token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/users/{{userId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "",
                "users",
                "{{userId}}"
              ]
            }
          }
        },
        {
          "name": "USER-DEL-TC004 - Verify a regular user cannot delete another user's account",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{user_token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/users/{{otherUserId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "",
                "users",
                "{{otherUserId}}"
              ]
            }
          }
        },
        {
          "name": "USER-DEL-TC005 - Verify unauthorized error when deleting without an auth token",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/users/{{userId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "",
                "users",
                "{{userId}}"
              ]
            }
          }
        }
      ]
    },
    {
      "name": "Brand Management",
      "item": [
        {
          "name": "BRAND-CREATE-TC001 - Verify successful brand creation with valid data",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{admin_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n\"name\": \"ProTools\", \n\"slug\": \"protools-new\",\n\"logo_url\": \"http://example.com/logo.png\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/brands",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "",
                "brands"
              ]
            }
          }
        },
        {
          "name": "BRAND-CREATE-TC002 - Verify error when creating a brand with a missing name",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{admin_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n\"slug\": \"missing-name-test\",\n\"logo_url\": \"http://example.com/logo.png\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/brands",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "",
                "brands"
              ]
            }
          }
        },
        {
          "name": "BRAND-CREATE-TC003 - Verify error when creating a brand with a duplicate name",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{admin_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n\"name\": \"DeWalt\",\n\"slug\": \"protools\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/brands",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "",
                "brands"
              ]
            }
          }
        },
        {
          "name": "BRAND-CREATE-TC004 - Verify unauthorized error when creating a brand with a regular user token",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{user_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n\"name\": \"UserBrand\",\n\"slug\": \"userbrand\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/brands",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "",
                "brands"
              ]
            }
          }
        },
        {
          "name": "BRAND-UPD-TC001 - Verify successful brand update with valid data",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{admin_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n\"name\": \"ProTools Inc.\",\n\"slug\": \"protools-inc\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/brands/{{brandId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "",
                "brands",
                "{{brandId}}"
              ]
            }
          }
        },
        {
          "name": "BRAND-UPD-TC002 - Verify error when updating a brand to a duplicate name",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{admin_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n\"name\": \"Makita\",\n\"slug\": \"brand-name-1\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/brands/{{brandId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "",
                "brands",
                "{{brandId}}"
              ]
            }
          }
        },
        {
          "name": "BRAND-UPD-TC003 - Verify error when updating a brand that does not exist",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{admin_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n\"name\": \"Ghost Brand\",\n\"slug\": \"ghost-brand\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/brands/99999",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "",
                "brands",
                "99999"
              ]
            }
          }
        },
        {
          "name": "BRAND-UPD-TC004 - Verify unauthorized error when updating with a regular user token",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{user_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n\"name\": \"UserBrand\",\n\"slug\": \"userbrand-update\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/brands/{{brandId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "",
                "brands",
                "{{brandId}}"
              ]
            }
          }
        },
        {
          "name": "BRAND-DEL-TC001 - Verify successful brand deletion by an admin",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{admin_token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/brands/{{brandId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "",
                "brands",
                "{{brandId}}"
              ]
            }
          }
        },
        {
          "name": "BRAND-DEL-TC002 - Verify error when deleting a brand that does not exist",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{admin_token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/brands/99999",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "",
                "brands",
                "99999"
              ]
            }
          }
        },
        {
          "name": "BRAND-DEL-TC003 - Verify unauthorized error when deleting with a regular user token",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{user_token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/brands/{{brandId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "",
                "brands",
                "{{brandId}}"
              ]
            }
          }
        },
        {
          "name": "BRAND-CREATE-TC005 - Verify that duplicate brand names are allowed (only slug must be unique)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{admin_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n\"name\": \"ProTools\",\n\"slug\": \"protools-different\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/brands",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "",
                "brands"
              ]
            }
          }
        }
      ]
    },
    {
      "name": "Favorites Management",
      "item": [
        {
          "name": "FAV-ADD-TC001 - Verify a user can add an existing product to their favorites",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{user_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"product_id\": {{productId}}}"
            },
            "url": {
              "raw": "{{baseUrl}}/favorites",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "",
                "favorites"
              ]
            }
          }
        },
        {
          "name": "FAV-ADD-TC002 - Verify error when adding a product that does not exist",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{user_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"product_id\": 99999}"
            },
            "url": {
              "raw": "{{baseUrl}}/favorites",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "",
                "favorites"
              ]
            }
          }
        },
        {
          "name": "FAV-ADD-TC003 - Verify error when adding a product to favorites that is already there",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{user_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"product_id\": {{productId}}}"
            },
            "url": {
              "raw": "{{baseUrl}}/favorites",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "",
                "favorites"
              ]
            }
          }
        },
        {
          "name": "FAV-ADD-TC004 - Verify unauthorized error when adding to favorites without an auth token",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\"product_id\": {{productId}}}"
            },
            "url": {
              "raw": "{{baseUrl}}/favorites",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "",
                "favorites"
              ]
            }
          }
        }
      ]
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:8091"
    },
    {
      "key": "admin_token",
      "value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOi8vbG9jYWxob3N0OjgwOTEvdXNlcnMvbG9naW4iLCJpYXQiOjE3NTM2MTI1MDgsImV4cCI6MTc1MzYxMjgwOCwibmJmIjoxNzUzNjEyNTA4LCJqdGkiOiIwT09oWlBQVldTZ2lYT0sxIiwic3ViIjoiMDFLMTVLOE1CNDRYWTFXUkFCMktDWlRGV00iLCJwcnYiOiIyM2JkNWM4OTQ5ZjYwMGFkYjM5ZTcwMWM0MDA4NzJkYjdhNTk3NmY3Iiwicm9sZSI6InVzZXIifQ.vuN-itWnxyKjkT8VW0NG8MaBA6EThUGBQ7TFRVBrqf0"
    },
    {
      "key": "user_token",
      "value": ""
    },
    {
      "key": "productId",
      "value": "1"
    },
    {
      "key": "userId",
      "value": "1"
    },
    {
      "key": "brandId",
      "value": "1"
    },
    {
      "key": "otherUserId",
      "value": "2"
    }
  ]
}